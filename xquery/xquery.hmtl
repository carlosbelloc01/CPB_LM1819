mostrar todos los bailes
<html>
<body>
<h1>Bailes ofertados</h1>
<table style="border: 1px solid black">
<tr>
	<th>Nombre</th>
	<th>Profesor</th>
	<th>Plazas</th>
</tr>
{
for $baile in //Bailes/baile
let $nombre:=$baile/nombre
let $profesor:=$baile/profesor
let $plazas:=$baile/plazas
return
	<tr>
		<td>{data($nombre)}</td>
		<td>{data($profesor)}</td>
		<td>{data($plazas)}</td>
	</tr>
}
</table>
</body>
</html>



sacar nombre, profesor y plaza de los que tengan cuota trimestral y ordenados por plaza.
<html>
<body>
<h1>Bailes ofertados</h1>
<table style="border: 1px solid black">
<tr>
	<th>Nombre</th>
	<th>Profesor</th>
	<th>Plazas</th>
</tr>
{
for $baile in //Bailes/baile
let $nombre:=$baile/nombre
let $profesor:=$baile/profesor
let $plazas:=$baile/plazas
where $baile/precio[@cuota="trimestral"]
order by $baile/plazas  <!--Aqui podemos poner descending para que el orde sea descendente-->
return
	<tr>
		<td>{data($nombre)}</td>
		<td>{data($profesor)}</td>
		<td>{data($plazas)}</td>
	</tr>
}
</table>
</body>
</html>



insertar un nodo 

insert node
<baile id="7">
<nombre>Foxtrot</nombre>
<precio cuota="mensual" moneda="dolares">22</precio>
<plazas>12</plazas>
<comienzo>01/01/2020</comienzo>
<fin>01/03/2020</fin>
<profesor>Freddy</profesor>
<sala>3</sala>
</baile>
before //Bailes/baile[1]
<!--as first into //Bailes
                            last--><!--esto es otra forma de hacelo-->



Para actualizar campos de un nodo

replace value of node //Bailes/baile[1]/profesor
with "Profe"
,
replace value of node //Bailes/baile[1]/plazas
with "200"


Para actualizar campos de un nodo (con parametro de busqueda)

replace value of node //Bailes/baile[@id=6]/profesor
with "Profe"
,
replace value of node //Bailes/baile[@id=6]/plazas
with "200"



borrado

delete node //Bailes/baile["id=7]




obtener los titulos de los libros prestados con sus autores
y las fechas de inicio y devolucion del prestamo ordenados por
la fecha de inicio del prestamo(consulta cruzada)


for $t in doc("Biblioteca.xml")//libro,
$e in doc("Prestamos.xml")//entrada
where $t/titulo = $e/titulo
order by $e/prestamo/inicio
return
        <prestamo>
        {$t/titulo, $t/autor/*, $e/prestamo/inicio, $e/prestamo/devolucion}
        </prestamo>




mostrar los titulos de los libros con la etiqueta titulo

for $tit in //bookstore/book/title/text()
return <titulo>{$tit}</titulo>


Mostar los libros cuyo precio sea menor o igual a 30

for $libro in //bookstore/book
where $libro/price <= 30
return $libro


Mostar los libros cuyo precio sea menor o igual a 30 otra forma

for $libro in //bookstore/book[price<=30]
return $libro


Mostrar el titulo de los libros con precio igual al anterior. Solo titulo

for $libro in //bookstore/book
where $libro/price <= 30
return $libro/title



Mostrar el titulo de los libros con preio igual al anterior. Solo titulo y sin atributo del lenguaje.

for $libro in //bookstore/book
where $libro/price <= 30
return <title>{$libro/title/text()}</title>


Mostrar titulo y autor de los libros del a√±o 2005 y etiquetar cada uno de ellos con lib2005

for $libro in //bookstore/book
where $libro/year=2005
return
 <lib2005>
       <title>{$libro/title/text()}</title>
       <author>{$libro/author/text()}</author>
 </lib2005>


 Mostrar los libros ordenados por categoria y luego por titulo en una sola consulta (con la @ pones atributos)

 for $libro in //bookstore/book
 order by $libro/@category, $libro/title
 return $libro


 mostrar cuantos libros hay y etiquetarlo con total

 let $cuantos := count(//bookstore/book)
 return <total>{$cuantos}</total>


 mostrar los titulos de los libros y al final una etiqueta que ponga total de libros (4)

 let $total := count(//bookstore/book),
 	$titulos := (
	 for $libro in //bookstore/book/title
	 return<titulo>{$libro/text()}</titulo>)
return 
	<resultado>
	{$titulos}
	<total>{$total}</total>
	</resultado>
 


 Mostrar el precio minimo y max de los libros.

 let $max := max(//bookstore/book/price),
	$min := min(//bookstore/book/price)
return
	<libro>
		<max>{$max}</max>
		<min>{$min}</min>
	</libro>



Practica
Mostar titulo y numero de autores que tiene cada libro en etiquetas diferentes

for $libro in //bookstore/book,
let $cuantos := count(//bookstore/book/author)
return 
	<titulo>{$libro}</titulo>
	<cuantos>{$cuantos}</cuantos>




Mostrar cada uno de los precios de los libros, y al final una nueva etiqueta con la suma de los precios (funcion sum())


for $libro in //bookstore/book
where $libro/price 
return $libro/price